{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/desktop/main/control-panel/control-panel.component.ts","webpack:///src/app/components/desktop/main/control-panel/control-panel.component.html","webpack:///src/app/components/desktop/main/information-panel/information-panel.component.ts","webpack:///src/app/components/desktop/main/information-panel/information-panel.component.html","webpack:///src/app/components/desktop/main/main.component.ts","webpack:///src/app/components/desktop/main/main.component.html","webpack:///src/app/components/desktop/main/map-panel/map-panel.component.html","webpack:///src/app/components/desktop/main/map-panel/map-panel.component.ts","webpack:///src/app/components/mobile/mobile-main/mobile-main.component.ts","webpack:///src/app/components/mobile/mobile-main/mobile-main.component.html","webpack:///src/app/components/mobile/mobile-main/my-id/my-id.component.ts","webpack:///src/app/components/mobile/mobile-main/my-id/my-id.component.html","webpack:///src/app/models/lab-machine-info.ts","webpack:///src/app/models/model.egcr-info.ts","webpack:///src/app/models/model.pv-info.ts","webpack:///src/app/serrvices/data.service.ts","webpack:///src/app/serrvices/messaging.service.ts","webpack:///src/app/serrvices/web.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","register","enabled","production","declarations","providers","bootstrap","ControlPanelComponent","InformationPanelComponent","dataService","MainComponent","modalRef","MapPanelComponent","modalService","route","msgService","webService","isMobile","Lat","Lon","Zoom","pollTime","labMachineInfo","pvInfo","egcrInfo","labMachineInfoMarkers","pvInfoMarkers","egcrInfoMarkers","arrowPolylines","getDataCount","updateLocAfterFreshPVData","invalidIDCount","dbgAtifPVInfoUpdate","params","subscribe","Number","getPermission","receiveMessage","message","currentMessage","mapProp","center","google","maps","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","map","Map","gmapElement","nativeElement","createMarkers","getData","dataPoll","pvAssignInProgress","console","log","setTimeout","bind","elementOpts","document","getElementById","navigator","geolocation","getCurrentPosition","position","myLat","coords","latitude","myLon","longitude","error","dbgDisp","innerHTML","alert","getLocation","find","x","PV_ID","myPvID","updatePvInfo","pv_id","lab_order","LAB_order","lab_id","LAB_ID","lat","lon","data","notificationTitle","notificationBody","refreshMarkers","clearData","getLabInfo","tempLab","getMachineInfo","d","tempMachine","forEach","lab","machine","push","city","area","phase","st","s_st","building","floor","pr1","pr2","dr1","dr2","ss","err","getPvInfo","pvs","pv","sendMyLocationUpdate","getEgcrInfo","egcrs","egcr","egcr_id","infoPresent","lm","selectedLabMachine","selectedPv","originLat","originLon","desLat","desLon","lineSymbol","strokeOpacity","strokeColor","fillColor","scale","line","Polyline","valueOf","lng","icons","icon","offset","repeat","SymbolPath","FORWARD_CLOSED_ARROW","anchor","Point","fillOpacity","record","assigned","PR1","PR2","DR1","DR2","SS","iconCfg","url","newCreatedMarker","Marker","cursor","toString","addListener","ev","assignPvToLab","pvAssignId","parseInt","getTitle","labMachineId","checkRec","openModal","infoTemplate","stop","labMachine","createArrowPolylines","optionTemplate","pvId","rectangle_marker","EGCR_ID","locationCircle","Circle","strokeWeight","radius","fitBounds","getBounds","createEgcrInfoMarkers","createLocationCircle","setMap","createLabMachineInfoMarkers","createPvInfoMarkers","template","show","hide","Mode","sendNotification","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","deg","PI","MobileMainComponent","MyIdComponent","usersPvID","pvIDIsValid","elementBtnMyPvID","elementMyPvID","value","validateEnteredPvID","elementInvalidNotif","innerText","onClick_BtnStart","LabMachineInfo","City","Area","Phase","St","S_ST","Building","Floor","EGCR_Info","PVInfo","DataService","providedIn","MessagingService","db","afAuth","token","WebService","http","base_url","headers","get","body_","append","body","JSON","stringify","post","environment","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './components/desktop/main/main.component';\nimport { MobileMainComponent } from './components/mobile/mobile-main/mobile-main.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'pc-frontend', pathMatch: 'full'},\n  {path: 'pc-frontend', component: MainComponent},\n  {path: 'mobile-frontend', component: MobileMainComponent},\n  {path: 'pc-frontend/:lat/:lon/:zoom', component: MainComponent},\n  {path: 'mobile-frontend/:lat/:lon/:zoom', component: MobileMainComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lab-pv-system';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './components/desktop/main/main.component';\nimport { MapPanelComponent } from './components/desktop/main/map-panel/map-panel.component';\nimport { InformationPanelComponent } from './components/desktop/main/information-panel/information-panel.component';\nimport { ControlPanelComponent } from './components/desktop/main/control-panel/control-panel.component';\nimport { MobileMainComponent } from './components/mobile/mobile-main/mobile-main.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireModule } from 'angularfire2';\nimport { MyIdComponent } from './components/mobile/mobile-main/my-id/my-id.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    MapPanelComponent,\n    InformationPanelComponent,\n    ControlPanelComponent,\n    MobileMainComponent,\n    MyIdComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyBPjGl2gNhiKKSYPHszXhKVorueDEwYyMg\",\n      authDomain: \"lab-pv-system.firebaseapp.com\",\n      databaseURL: \"https://lab-pv-system.firebaseio.com\",\n      projectId: \"lab-pv-system\",\n      storageBucket: \"lab-pv-system.appspot.com\",\n      messagingSenderId: \"848306702179\",\n      appId: \"1:848306702179:web:d4c90eea4ea8872190b556\",\n      measurementId: \"G-2WLXSWS08K\"\n      }),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    ModalModule.forRoot(),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-control-panel',\n  templateUrl: './control-panel.component.html',\n  styleUrls: ['./control-panel.component.css']\n})\nexport class ControlPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card ml-1 my-pattern\" #cpanel style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\">\n      <div style=\"background-color: LightSteelBlue;\">Control Panel</div>\n      <div class=\"label_div\">\n        <p class=\"label_text\" style=\"font-size: 20px\">Label select <br></p>\n        <input type=\"checkbox\" id=\"chkBoxShowNormalHouse\" name=\"vehicle1\" value=\"Bike\">\n        <Label class=\"label_text\">Normal House</Label>\n      </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/serrvices/data.service';\n\n@Component({\n  selector: 'app-information-panel',\n  templateUrl: './information-panel.component.html',\n  styleUrls: ['./information-panel.component.css']\n})\nexport class InformationPanelComponent implements OnInit {\n\n  constructor(public dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" #ipanel>\n    <div class=\"card-body\" style=\"background-color:DarkCyan;\">\n\n      <div *ngIf=\"!this.dataService.infoPresent\" style=\"background-color:DarkCyan;\">\n        <h5 style=\"color:FloralWhite;\">Select House or PV to view details</h5>\n      </div>\n\n\n      <div class=\"row\" *ngIf=\"this.dataService.infoPresent && this.dataService.pvInfo\">\n        <h5 style=\"color:FloralWhite;\">Patrol-Vehicle Information</h5>\n      </div>\n\n      <div *ngIf=\"this.dataService.infoPresent && this.dataService.pvInfo\" #machineInfo class=\"row\">\n        \n          <div class=\"col-12\">\n            <div class=\"table-responsive\">\n            <table class=\"table table-sm table-dark\">\n                <thead>\n                  <tr>\n                    \n                    <th scope=\"col\">PV-ID</th>\n                    <th scope=\"col\">LAB-ID</th>\n                    <th scope=\"col\">LAB ORDER</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{{this.dataService.selectedPv.PV_ID}}</td>\n                    <td>{{this.dataService.selectedPv.LAB_ID}}</td>\n                    <td>{{this.dataService.selectedPv.LAB_order}}</td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n              </div>\n          </div>\n      </div>\n\n      <div class=\"row\" *ngIf=\"this.dataService.infoPresent && this.dataService.labMachineInfo\">\n        <h5 style=\"color:FloralWhite;\">House Information</h5>\n      </div>\n      <div class=\"row\" *ngIf=\"this.dataService.infoPresent && this.dataService.labMachineInfo\">\n          <div class=\"col-12\">\n            <div class=\"table-responsive\">\n            <table class=\"table table-sm table-dark\">\n                <thead>\n                  <tr>\n                    \n                    <th scope=\"col\">HSS-ID</th>\n                    <th scope=\"col\">City</th>\n                    <th scope=\"col\">Area</th>\n                    <th scope=\"col\">Phase</th>\n                    <th scope=\"col\">Street</th>\n                    <th scope=\"col\">Sub-Street</th>\n                    <th scope=\"col\">Building</th>\n                    <th scope=\"col\">Floor</th>\n                    <th scope=\"col\">PR1</th>\n                    <th scope=\"col\">PR2</th>\n                    <th scope=\"col\">DR1</th>\n                    <th scope=\"col\">DR2</th>\n                    <th scope=\"col\">SS</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{{this.dataService.selectedLabMachine.LAB_ID}}</td>\n                    <td>{{this.dataService.selectedLabMachine.City}}</td>\n                    <td>{{this.dataService.selectedLabMachine.Area}}</td>\n                    <td>{{this.dataService.selectedLabMachine.Phase}}</td>\n                    <td>{{this.dataService.selectedLabMachine.St}}</td>\n                    <td>{{this.dataService.selectedLabMachine.S_ST}}</td>\n                    <td>{{this.dataService.selectedLabMachine.Building}}</td>\n                    <td>{{this.dataService.selectedLabMachine.Floor}}</td>\n                    <td>{{this.dataService.selectedLabMachine.PR1}}</td>\n                    <td>{{this.dataService.selectedLabMachine.PR2}}</td>\n                    <td>{{this.dataService.selectedLabMachine.DR1}}</td>\n                    <td>{{this.dataService.selectedLabMachine.DR2}}</td>\n                    <td>{{this.dataService.selectedLabMachine.SS}}</td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n              </div>\n          </div>\n      </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/serrvices/data.service';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n\n  constructor(public dataService: DataService) {\n   \n   }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<div style=\"background-color: black;\">\n    \n\n    <div class=\"row no-gutters p-1\">\n        <div class=\"col-12\">\n            <app-information-panel ></app-information-panel>\n        </div>\n    </div>\n    <div class=\"row no-gutters p-1\" style=\"height: 560px;\">\n        <div class=\"col-lg-11 col-md-7\">\n            <app-map-panel></app-map-panel>\n        </div>\n        <div class=\"col-lg-1 col-md-5\">\n            <app-control-panel ></app-control-panel>\n        </div>\n    </div>\n</div>\n","\n<div *ngIf=\"!this.isMobile\" class=\"card ml-1\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\">\n  <div class=\"card-body\">\n      <div style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\" id=\"wrapper\">\n        <div  id=\"google_map\">\n          <div style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\" #gmap></div>\n        </div>\n     \n        <div id=\"over_map\">\n          <div *ngIf=\"this.dataService.pvAssignInProgress\" class=\"row no-gutters\" style=\"background-color: rgba(0,0,0,0.5);border-radius: 10px;\">\n            <p class=\"m-3\" style=\"color: white;\"> Now click on the Lab to assign <button class=\"btn btn-sm btn-outline-warning ml-2\" (click)=\"this.dataService.pvAssignInProgress = false\">Cancel</button></p>\n          </div>\n        </div>\n     </div>\n    </div>\n</div>\n\n<div *ngIf=\"this.isMobile\">\n      <div #gmap style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\"></div>\n</div>\n\n<ng-template #optionTemplate>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title pull-left\">Options</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n\n      <div class=\"m-2\">\n        <button class=\"btn btn-primary\" (click)=\"onAssignButtonClick()\">Assign House</button>\n        <button class=\"btn btn-primary ml-2\">Move to</button>\n      </div>\n    </div>\n  </ng-template>\n\n\n  <ng-template #infoTemplate>\n    <div class=\"modal-header\"  style=\"background-color:DarkCyan;\">\n      <h4 class=\"modal-title pull-left\" style=\"color:White;\">Information</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\" style=\"background-color:DarkSlateGrey;\">\n        <app-information-panel ></app-information-panel>    \n        <div *ngIf=\"this.dataService.labMachineInfo && (this.dataService.selectedLabMachine.PR1 != 0 || this.dataService.selectedLabMachine.PR2 != 0 || this.dataService.selectedLabMachine.DR1 != 0 || this.dataService.selectedLabMachine.DR2 != 0 || this.dataService.selectedLabMachine.SS != 0)\" class=\"mt-2\">\n          <button (click)=\"assignLabToMe(this.dataService.selectedLabMachine)\" class=\"m-1 btn btn-primary\">Assign this House to me</button>\n          <button class=\"m-1 btn btn-primary\" id=\"dbgAtif1\">Inspection started</button>\n\t\t  <button (click)=\"validationEnded(this.dataService.selectedLabMachine)\" class=\"m-1 btn btn-primary\">Inspection ended</button>\n        </div>\n    </div>\n  </ng-template>\n\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { ViewChild, TemplateRef, Input} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { LabMachineInfo } from 'src/app/models/lab-machine-info';\nimport { PVInfo } from 'src/app/models/model.pv-info';\nimport { EGCR_Info } from 'src/app/models/model.egcr-info';\nimport { DataService } from 'src/app/serrvices/data.service';\nimport { MessagingService } from 'src/app/serrvices/messaging.service';\nimport { WebService } from 'src/app/serrvices/web.service';\n\n\n@Component({\n  selector: 'app-map-panel',\n  templateUrl: './map-panel.component.html',\n  styleUrls: ['./map-panel.component.css']\n})\nexport class MapPanelComponent implements OnInit {\n\n  \n  @Input() isMobile: Boolean = false;\n\n\n  @ViewChild('optionTemplate') optionTemplate: any; // for option modal\n  @ViewChild('infoTemplate') infoTemplate: any; // for info modal\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map // map reference for later\n\n  // DEFAULT LAT LON OF CITY Los Angeles if no param is given\n  Lat: number = 34.0482809;\n  Lon: number = -118.2437;\n  Zoom: number = 12;\n\n  //\n\n  pollTime: number = 3; // time in seconds to sync with db\n\n\n  // Data Arrays\n  labMachineInfo: LabMachineInfo [] = [];\n  pvInfo: PVInfo [] = [];\n  egcrInfo: EGCR_Info[] = [];\n\n  // markers on the map\n  labMachineInfoMarkers: google.maps.Marker [] = [];\n  pvInfoMarkers: google.maps.Marker [] = [];\n  egcrInfoMarkers: google.maps.Marker [] = [];\n\n  // from pv to labs arrows --->\n  arrowPolylines: google.maps.Polyline [] = [];\n\n  // location circle for mobile\n  locationCircle: google.maps.Circle;\n\n  //\n\n  modalRef: BsModalRef;\n\n  message: any;\n\n\n  constructor(private modalService: BsModalService, public route: ActivatedRoute, public dataService: DataService, private msgService: MessagingService, public webService: WebService) {\n\n    //getting lat, lon and zoom from parameters if present\n    this.route.params.subscribe(params => {\n      if(params['lat']){\n        if(params['lon']){\n          this.Lat = Number(params['lat']);\n          this.Lon = Number(params['lon']);\n          //console.log(this.lat);\n        }\n        if(params['zoom']){\n          this.Zoom = Number(params['zoom']);\n          //console.log(\"zoom: \"+this.Zoom);\n        } \n      }\n    });\n  }\n\n  ngOnInit(){\n    this.msgService.getPermission();\n    this.msgService.receiveMessage();\n    this.message = this.msgService.currentMessage;\n  }\n\n  ngAfterViewInit() {\n    //console.log(this.gmapElement);\n    \n\n    var mapProp = {\n      center: new google.maps.LatLng(this.Lat, this.Lon),\n      zoom: this.Zoom,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n    \n    this.createMarkers();\n\n\n    // getting data from webService\n    this.getData();\n    this.dataPoll();\n  }\n\n  getDataCount: any = 0;\n  updateLocAfterFreshPVData: boolean = false;\n  dataPoll(){\n    //console.log(\"pv assign: \"+this.dataService.pvAssignInProgress);\n    \n    if(!this.dataService.pvAssignInProgress){\n      /*\n      if(this.isMobile){\n        this.sendMyLocationUpdate();\n      }\n      */\n      this.getDataCount ++;\n      this.updateLocAfterFreshPVData = true;\n      console.log(\"Get data called \", this.getDataCount, \" times\");\n      this.getData();\n    }\n    setTimeout(this.dataPoll.bind(this), this.pollTime*1000);\n  }\n\n  public invalidIDCount: number = 0;\n\n  getLocation() {\n\n    var elementOpts = document.getElementById(\"dbgAtif1\")! as HTMLInputElement;\n\n    if (navigator.geolocation) {\n\n      console.log(\"Now getting loc\");\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"loc gott\");\n\n        this.dataService.myLat = position.coords.latitude;\n        this.dataService.myLon = position.coords.longitude;\n      }, error => {\n        console.log(\"loc error: \", error.message);\n        //var dbgDisp = \"log err \" + this.dbgAtifGetLocCall.toString() + \",\" + error.code.toString();\n        var dbgDisp = error.message;\n        elementOpts.innerHTML = dbgDisp;\n        //elementOpts.innerHTML = \"locFail: \" + error.code.toString();\n      });\n    }\n    else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  async sendMyLocationUpdate(){\n\n    //Get current location here and update these numbers\n\n    //this.dataService.myLat = 34.0482809;\n    //this.dataService.myLon = -118.2437;\n\n    this.getLocation();\n\n    //this.dataService.myLat = this.dataService.myLat + 0.001;\n\n    var e = this.pvInfo.find(x => x.PV_ID === this.dataService.myPvID);\n\n    \n    if(e == null) {\n      console.log(\"Atif_pvID. Couldnot find pvID \" , this.invalidIDCount, \"times\");\n      this.invalidIDCount ++;\n      if(this.invalidIDCount > 1) {\n        this.dataService.myPvID = 0;\n      }\n      return;\n    }\n    \n    console.log(\"AtifLoc_02. \", this.dataService.myLat, \",\", this.dataService.myLon);\n\n    this.dataService.updatePvInfo({\n      //pv_id: e.PV_ID,\n      //lab_order: e.LAB_order,\n      //lab_id: e.LAB_ID,\n      //lat: this.dataService.myLat,\n      //lon: this.dataService.myLon\n      pv_id: e.PV_ID,\n      lab_order: e.LAB_order,\n      lab_id: e.LAB_ID,\n      lat: this.dataService.myLat,\n      lon: this.dataService.myLon\n    }).subscribe( async data=>{\n      //console.log(data);\n      var notificationTitle = \"New PV Assignment\";\n      var notificationBody = \"Process Validation (PV) ID: \"+data.data.pv_id+\" has been assigned to LAB ID: \"+ data.data.lab_id\n      //this.webService.sendNotification(notificationTitle, notificationBody).subscribe();\n    });\n  }\n\n  clearData(){\n    this.labMachineInfo = [];\n    this.pvInfo = [];\n    this.egcrInfo = [];\n    this.refreshMarkers();\n  }\n\n  dbgAtifPVInfoUpdate: any = 0;\n  getData(){\n\n    this.clearData();\n\n    //in this method we'll get data from webService from database but now I'm hard coding it for testing\n\n    // adding to labMachineInfo Array\n\n    /*\n    this.labMachineInfo.push(new LabMachineInfo(6548265, 34.0507194, -118.2688471, \"Los Angeles\", \"1331\", \"W\", \"7\", \"\", \"12\", \"1st\", 0, 0, 0, 0, 0));\n    this.labMachineInfo.push(new LabMachineInfo(6548266, 34.0575725, -118.2659292, \"Los Angeles\", \"430\", \"S-Grand\", \"7\", \"\", \"142\", \"2nd\", 1, 0, 0, 0, 0));\n    this.labMachineInfo.push(new LabMachineInfo(6548267, 34.0485144, -118.2696499, \"Los Angeles\", \"214\", \"Albany\", \"7\", \"\", \"10\", \"Ground\", 1, 1, 1, 0, 0));\n    this.labMachineInfo.push(new LabMachineInfo(6548268, 34.0444611, -118.2636114, \"Los Angeles\", \"245\", \"Fifth Area\", \"7\", \"\", \"12\", \"4th\", 1, 0, 1, 1, 0));*/\n\n    this.dataService.getLabInfo().subscribe(\n      data=>{\n        const tempLab = data.data;\n        this.dataService.getMachineInfo().subscribe(\n          d => {\n            const tempMachine = d.data;\n            tempLab.forEach(lab => {\n              tempMachine.forEach(machine => {\n                //console.log(machine);\n                if(lab.lab_id == machine.lab_id){\n                  this.labMachineInfo.push(new LabMachineInfo(lab.lab_id, lab.lat, lab.lon, lab.city, lab.area, lab.phase, lab.st, lab.s_st, lab.building, lab.floor, machine.pr1, machine.pr2, machine.dr1, machine.dr2, machine.ss));\n                  //console.log(\"found_labmachine\");\n                  this.refreshMarkers();\n                }\n              });\n            });\n\n          }\n        );\n      },\n      err=>{\n        console.log(err);\n      },\n      ()=>{\n\n      }\n    );\n\n\n    // adding to pvInfo array \n    /*\n    this.pvInfo.push(new PVInfo(90, 34.0494611, -118.2636114, 0, \"CCR\"));\n    this.pvInfo.push(new PVInfo(91, 34.0359263, -118.2479044, 0, \"CCR\"));\n    this.pvInfo.push(new PVInfo(92, 33.9903218, -118.2764002, 6548266, \"Self\"));*/\n\n    this.dataService.getPvInfo().subscribe(\n      data=>{\n        const pvs = data.data;\n        pvs.forEach(pv => {\n          this.pvInfo.push(new PVInfo(pv.pv_id, pv.lat, pv.lon, pv.lab_id, pv.lab_order));\n          this.refreshMarkers();\n        });\n\n        //Now update you PV in the database with your current location\n        if(this.isMobile && this.updateLocAfterFreshPVData){\n          this.sendMyLocationUpdate();\n          this.updateLocAfterFreshPVData = false;\n        }\n        \n       this.dbgAtifPVInfoUpdate ++;\n       console.log(\"PV info update.... \", this.dbgAtifPVInfoUpdate, \" times\")\n      },\n      err=>{\n        console.log(err);\n      }\n    );\n    \n\n    // adding to egcrInfo array\n    /*\n    this.egcrInfo.push(new EGCR_Info(50, 34.0367087, -118.163447));\n    */\n\n    this.dataService.getEgcrInfo().subscribe(\n      data=>{\n        const egcrs = data.data;\n\n        egcrs.forEach(egcr => {\n          this.egcrInfo.push(new EGCR_Info(egcr.egcr_id, egcr.lat, egcr.lon));\n          this.refreshMarkers();\n        });\n      }, err=>{\n\n      }\n    );\n\n\n    if(this.dataService.infoPresent){\n\n      this.labMachineInfo.forEach((lm)=>{\n        if(this.dataService.selectedLabMachine != null && lm.LAB_ID == this.dataService.selectedLabMachine.LAB_ID){\n          this.dataService.selectedLabMachine = lm;\n        }\n      });\n\n      this.pvInfo.forEach((pv)=>{\n        if(this.dataService.selectedPv != null && pv.PV_ID == this.dataService.selectedPv.PV_ID){\n          this.dataService.selectedPv = pv;\n        }\n      });\n\n    }\n\n  }\n\n\n  createArrowPolylines(originLat: Number, originLon: Number, desLat: Number, desLon: Number){\n    // line\n    var lineSymbol = {\n      path: 'M 0,-1 0,1',\n      strokeOpacity: 1,\n      strokeColor: '#700',\n      fillColor: '#700',\n      scale: 2\n    };\n\n    var line = new google.maps.Polyline({\n      path: [{lat: originLat.valueOf(), lng: originLon.valueOf()}, {lat: desLat.valueOf(), lng: desLon.valueOf()}],\n      strokeOpacity: 0,\n      icons: [{\n        icon: lineSymbol,\n        offset: '0',\n        repeat: '8px',\n      }, {\n        icon: {\n          path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,\n          fillColor: \"red\",\n          anchor: new google.maps.Point(0, -5),\n          fillOpacity: 1,\n          strokeOpacity: 1,\n        }\n      }],\n      map: this.map\n    });\n\n    this.arrowPolylines.push(line);\n  }\n\n\n  createLabMachineInfoMarkers(){\n    this.labMachineInfo.forEach((record)=>{\n      var assigned = false;\n      if(record.PR1 == 1 || record.PR2 == 1 || record.DR1 == 1 || record.DR2 == 1 || record.SS == 1){\n        assigned = true;\n      }\n\n\n      var iconCfg;\n      if(assigned){\n        // creating red star\n        iconCfg = {\n          \n\t\t  url: 'assets/icons/alarm_lab.gif',\n          anchor: new google.maps.Point(20, 20)\n        };\n      } else {\n        // creating blue star\n        iconCfg = {\n\t\t  url: 'assets/icons/blue_lab.gif',\n          anchor: new google.maps.Point(20, 20)\n        };\n      }\n\n\n      var newCreatedMarker = new google.maps.Marker({\n        position: {lat: record.Lat.valueOf(), lng: record.Lon.valueOf()},\n        icon: iconCfg,\n        cursor: 'help',\n        map: this.map,\n        title: record.LAB_ID.toString()\n      });\n\n      /*\n      // adding right click if it's desktop\n      if(!this.isMobile){\n        newCreatedMarker.addListener('rightclick', (ev)=> {\n          this.openModal(this.optionTemplate);\n          ev.stop();\n        });\n      }\n      */\n      \n      newCreatedMarker.addListener('click', (ev)=> {\n\n        if(this.dataService.pvAssignInProgress){\n          this.assignPvToLab(this.dataService.pvAssignId, parseInt(newCreatedMarker.getTitle().toString()), \"CCR\");\n          return;\n        }\n      \n        var labMachineId = parseInt(newCreatedMarker.getTitle().toString());\n\n        this.labMachineInfo.forEach((checkRec)=>{\n          if(checkRec.LAB_ID.valueOf() == labMachineId){\n            this.dataService.infoPresent = true;\n            this.dataService.pvInfo = false;\n            this.dataService.labMachineInfo = true;\n            this.dataService.selectedLabMachine = checkRec;\n\n            //console.log(\"found record\");\n          }\n        })\n\n        if(this.isMobile){\n          // if it's mobile then showing info in model \n          this.openModal(this.infoTemplate);\n        } \n        \n        ev.stop();\n      });\n\n\n      this.labMachineInfoMarkers.push(newCreatedMarker);\n\n    });\n  }\n\n\n  createPvInfoMarkers(){\n\n    this.pvInfo.forEach((record)=>{\n\n      var assigned = true;\n      if(record.LAB_ID.valueOf() == 0){\n        assigned = false;\n        //console.log(\"assigned = false\");\n      }\n\n      var iconCfg;\n\n      if(assigned){\n        // creating red triangle marker\n        iconCfg = {\n          url: 'assets/icons/alarm_pv.gif',\n          anchor: new google.maps.Point(20, 20)\n        };\n\n        // now creating arrow from pv to lab\n        this.labMachineInfo.forEach((labMachine)=>{\n          if(record.LAB_ID == labMachine.LAB_ID){\n            this.createArrowPolylines(record.Lat, record.Lon, labMachine.Lat, labMachine.Lon);\n          }\n        });\n\n      } else {\n        // creating blue triangle marker\n        iconCfg = {\n          url: 'assets/icons/blue_pv.gif',\n          anchor: new google.maps.Point(20, 20)\n        };\n      }\n\n      var newCreatedMarker = new google.maps.Marker({\n        position: {lat: record.Lat.valueOf(), lng: record.Lon.valueOf()},\n        icon: iconCfg,\n        cursor: 'help',\n        map: this.map,\n        title: record.PV_ID.toString()\n      });\n\n      if(!this.isMobile){\n        // for right click if not mobile for options on PV\n        newCreatedMarker.addListener('rightclick', (ev)=> {\n          this.dataService.pvAssignId = parseInt(newCreatedMarker.getTitle().toString());\n          this.openModal(this.optionTemplate);\n          ev.stop();\n        });\n      }\n\n      newCreatedMarker.addListener('click', (ev)=> {\n\n        if(this.dataService.pvAssignInProgress){\n          alert(\"Unabled to select PV due to assignment in progress\");\n          return;\n        }\n      \n        var pvId = parseInt(newCreatedMarker.getTitle().toString());\n\n        this.pvInfo.forEach((checkRec)=>{\n          if(checkRec.PV_ID.valueOf() == pvId){\n            this.dataService.infoPresent = true;\n            this.dataService.labMachineInfo = false;\n            this.dataService.pvInfo = true;\n            this.dataService.selectedPv = checkRec;\n\n            //console.log(\"found record\");\n          }\n        })\n\n        if(this.isMobile){\n          // if it's mobile then showing info in model \n          this.openModal(this.infoTemplate);\n        } \n        \n        ev.stop();\n      });\n\n\n      this.pvInfoMarkers.push(newCreatedMarker);\n    });\n\n  }\n\n  createEgcrInfoMarkers(){\n\n    this.egcrInfo.forEach((record)=>{\n      var rectangle_marker = new google.maps.Marker({\n        position: {lat: record.Lat.valueOf(), lng: record.Lon.valueOf()},\n        icon:'assets/icons/egcr.gif',\n        map: this.map,\n        cursor: 'help',\n        title: record.EGCR_ID.toString()\n      });\n      this.egcrInfoMarkers.push(rectangle_marker);\n    })\n\n  }\n\n\n  createLocationCircle(){\n    var locationCircle = new google.maps.Circle({\n      strokeColor: \"#003399\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: \"#003399\",\n      fillOpacity: 0.35,\n      map: this.map,\n      center: {\n        lat: this.Lat,\n        lng: this.Lon\n      },\n      radius: 1000 * 0.7\n    });\n    this.map.fitBounds(locationCircle.getBounds());\n\n    this.locationCircle = locationCircle;\n\n  }\n\n  createMarkers(){\n\n    //this.createLabMachineInfoMarkers();\n    //this.createPvInfoMarkers();\n    this.createEgcrInfoMarkers();\n\n    if(this.isMobile){\n      this.createLocationCircle();\n    }\n  }\n\n\n  refreshMarkers(){\n    //removing old markers\n    \n    this.labMachineInfoMarkers.forEach((e)=>{\n      e.setMap(null);\n    });\n\n    this.pvInfoMarkers.forEach((e)=>{\n      e.setMap(null);\n    });\n\n    this.egcrInfoMarkers.forEach((e)=>{\n      e.setMap(null);\n    });\n\n    this.arrowPolylines.forEach((e)=>{\n      e.setMap(null);\n    });\n\n    // creating updated ones\n    this.createLabMachineInfoMarkers();\n    this.createPvInfoMarkers();\n    this.createEgcrInfoMarkers();\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  onAssignButtonClick(){\n    //console.log(this.dataService.pvAssignId);\n    this.modalRef.hide();\n\n    this.pvInfo.forEach((e)=>{\n      if(e.PV_ID == this.dataService.pvAssignId && e.LAB_ID != 0){\n        // already assigned\n        //alert(\"This PV is already assigned\");\n       // return;\n       this.dataService.pvAssignInProgress = true;\n      }\n      else if(e.PV_ID == this.dataService.pvAssignId){\n        this.dataService.pvAssignInProgress = true;\n      }\n    })\n  }\n\n\n  async assignPvToLab(PV_ID: Number, LAB_ID: Number, Mode: String){\n\n    //console.log(\"assignToLabCalled: \"+PV_ID+\" \"+LAB_ID);\n\n\n    var e = this.pvInfo.find(x => x.PV_ID === PV_ID);\n\n    //console.log(e);\n\n    this.dataService.updatePvInfo({\n      pv_id: e.PV_ID,\n      lab_order: Mode,\n      lab_id: LAB_ID,\n      lat: e.Lat,\n      lon: e.Lon\n    }).subscribe( async data=>{\n      //console.log(data);\n      var notificationTitle = \"New PV Assignment\";\n      var notificationBody = \"Process Validation (PV) ID: \"+data.data.pv_id+\" has been assigned to LAB ID: \"+ data.data.lab_id\n      this.webService.sendNotification(notificationTitle, notificationBody).subscribe();\n      this.getData();\n    });\n\n    \n    //alert(\"Assigned\");\n    //await this.refreshMarkers();\n    this.dataService.pvAssignInProgress = false;\n  }\n\n\n\n  // method to calculate distance\n  getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371; // Radius of the earth in km\n    var dLat = this.deg2rad(lat2-lat1);  // deg2rad below\n    var dLon = this.deg2rad(lon2-lon1); \n    var a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n      ; \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in km\n    return d;\n  }\n  \n  deg2rad(deg) {\n    return deg * (Math.PI/180)\n  }\n\n  assignLabToMe(lab: LabMachineInfo){\n    // now need to get PV from location of the user\n\n    this.pvInfo.forEach((e)=>{\n      //if(this.getDistanceFromLatLonInKm(e.Lat.valueOf(), e.Lon.valueOf(), this.Lat.valueOf(), this.Lon.valueOf()) < 0.5){\n      console.log(\"Atif_AssignToMe \", e.PV_ID, \", \", this.dataService.myPvID);\n      if(e.PV_ID == this.dataService.myPvID){\n        this.assignPvToLab(e.PV_ID, lab.LAB_ID, \"Self\");\n        this.modalRef.hide();\n        return;\n      }\n    });\n  }\n\n    validationEnded(lab: LabMachineInfo){\n    // now need to get PV from location of the user\n\n    this.pvInfo.forEach((e)=>{\n      //if(this.getDistanceFromLatLonInKm(e.Lat.valueOf(), e.Lon.valueOf(), this.Lat.valueOf(), this.Lon.valueOf()) < 0.5){\n      console.log(\"Atif_InspectionEnded \", e.PV_ID, \", \", this.dataService.myPvID);\n      if(e.PV_ID == this.dataService.myPvID){\n        this.assignPvToLab(e.PV_ID, 0, \"Self\");\n        this.modalRef.hide();\n        return;\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewChild, TemplateRef, Input} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { LabMachineInfo } from 'src/app/models/lab-machine-info';\nimport { PVInfo } from 'src/app/models/model.pv-info';\nimport { EGCR_Info } from 'src/app/models/model.egcr-info';\nimport { DataService } from 'src/app/serrvices/data.service';\nimport { MessagingService } from 'src/app/serrvices/messaging.service';\nimport { WebService } from 'src/app/serrvices/web.service';\n\n@Component({\n  selector: 'app-mobile-main',\n  templateUrl: './mobile-main.component.html',\n  styleUrls: ['./mobile-main.component.css']\n})\nexport class MobileMainComponent implements OnInit {\n\n  constructor(private modalService: BsModalService, public route: ActivatedRoute, public dataService: DataService, private msgService: MessagingService, public webService: WebService)\n  { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div *ngIf=\"this.dataService.myPvID == 0\" style=\"height: 100vh;\">\n    <div class=\"row no-gutters\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\">\n        <div class=\"col-12\" style=\"background-color:aquamarine\">\n           <app-my-id></app-my-id>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"this.dataService.myPvID != 0\" style=\"height: 100vh;\">\n    <div *ngIf=\"this.dataService.myPvID != 0\" class=\"row no-gutters\" style=\"position: absolute; top: 0; right: 0; bottom: 0; left: 0;\">\n        <div *ngIf=\"this.dataService.myPvID != 0\" class=\"col-12\">\n            <app-map-panel [isMobile]=\"true\"></app-map-panel>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ViewChild, TemplateRef, Input} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { LabMachineInfo } from 'src/app/models/lab-machine-info';\nimport { PVInfo } from 'src/app/models/model.pv-info';\nimport { EGCR_Info } from 'src/app/models/model.egcr-info';\nimport { DataService } from 'src/app/serrvices/data.service';\nimport { MessagingService } from 'src/app/serrvices/messaging.service';\nimport { WebService } from 'src/app/serrvices/web.service';\n@Component({\n  selector: 'app-my-id',\n  templateUrl: './my-id.component.html',\n  styleUrls: ['./my-id.component.css']\n})\nexport class MyIdComponent implements OnInit {\n\n  constructor(private modalService: BsModalService, public route: ActivatedRoute, public dataService: DataService, private msgService: MessagingService, public webService: WebService) {\n  }\n\n  usersPvID: number = 0;\n  pvIDIsValid: Boolean = false;\n\n  onClick_BtnStart() {\n    var elementBtnMyPvID = document.getElementById(\"btnMyPvID\")! as HTMLInputElement;\n    var elementMyPvID = document.getElementById(\"myPvID\")! as HTMLInputElement;\n    console.log(\"Atif kya hai?\");\n    elementBtnMyPvID.innerHTML = \"Started\";\n    this.usersPvID = Number(elementMyPvID.value);\n    console.log(\"MyPV ID is\", this.usersPvID);\n    this.validateEnteredPvID();\n  }\n\n  ngOnInit(): void {\n  }\n\n  //A list of pv will be got from the server so that the entered ID could be verified\n  validateEnteredPvID(){\n    var elementInvalidNotif = document.getElementById(\"invalidIdNotif\")! as HTMLInputElement;\n\n    this.dataService.getPvInfo().subscribe(\n      data=>{\n        const pvs = data.data;\n        pvs.forEach(pv => {\n          //this.pvInfo.push(new PVInfo(pv.pv_id, pv.lat, pv.lon, pv.lab_id, pv.lab_order));\n          console.log(\"AtifPvIDValidate: \", pv.pv_id, \",\", this.usersPvID);\n          if(pv.pv_id == this.usersPvID) {\n            this.pvIDIsValid = true;\n          }\n        });\n\n        if(this.pvIDIsValid) {\n          console.log(\"Valid pvID\");\n          this.dataService.myPvID = this.usersPvID;\n        } else {\n          console.log(\"Invalid pvID\");\n          elementInvalidNotif.innerText = \"Invalid ID\";\n        }\n      },\n      err=>{\n        console.log(err);\n        //elementInvalidNotif.innerHTML=error.code-caption;\n      }\n    );\n  }\n}\n","<div style=\"height: 100%; text-align:center; background-color: darkcyan;\">\n    <div style=\"background-color: slateblue;\">\n        <h1 style=\"color: powderblue;\">\n            SMART MUHAFIZ <br>\n            Patrol Vehical\n        </h1>\n    </div>\n    <p></p>\n    <p></p>    \n\n    <h2 style=\"color: whitesmoke;\">\n        Welcome... <br>\n        The saviour!\n    </h2>\n    <p>\n        <br>\n        <br>\n        Enter your ID <br>\n        and tap \"Start\"\n    </p>\n    \n    <input type=\"number\" id=\"myPvID\" placeholder=\"Enter you PV-ID\">\n    <p></p>\n    <button type=\"button\" id=\"btnMyPvID\" (click)=\"onClick_BtnStart()\">Start</button>\n    \n    <p>\n        <label id=\"invalidIdNotif\" style=\"color: red\"></label>\n        <br>\n        <br>\n    </p>\n</div>\n","export class LabMachineInfo {\n    LAB_ID: Number; //Unique ID for each lab\n    Lat: Number; //Latitude for google maps\n    Lon: Number; //Longitute for google maps\n    City: String; //City where the lab is installed\n    Area: String; //Area of the city where the lab is installed\n    Phase: String; //Phase of the area\n    St: String; //Street of the area\n    S_ST: String; //Sub street\n    Building: String; //Building number\n    Floor: String; //Floor of the building\n    PR1: Number; //Alert in PR1 machine\n    PR2: Number; //Alert in PR2 machine\n    DR1: Number; //Alert in DR1 machine\n    DR2: Number; //Alert in DR2 machine \n    SS: Number; //Alert in SS machine\n\n\n    constructor(LAB_ID: Number, Lat: Number, Lon: Number, City: String, Area: String, Phase: String, St: String, S_ST: String, Building: String, Floor: String, PR1: Number, PR2: Number, DR1: Number, DR2: Number, SS: Number){\n        this.LAB_ID = LAB_ID;\n        this.Lat = Lat;\n        this.Lon = Lon;\n        this.City = City;\n        this.Area = Area;\n        this.Phase = Phase;\n        this.St = St;\n        this.S_ST = S_ST;\n        this.Building = Building;\n        this.Floor = Floor;\n        this.PR1 = PR1;\n        this.PR2 = PR2;\n        this.DR1 = DR1;\n        this.DR2 = DR2;\n        this.SS = SS;\n    }\n}\n","export class EGCR_Info{\r\n    EGCR_ID: Number; //Unique ID for each EGCR page\r\n    Lat: Number; //Latitude for google maps\r\n    Lon: Number; //Longitude for google maps\r\n\r\n    constructor(EGCR_ID: Number, Lat: Number, Lon: Number){\r\n        this.EGCR_ID = EGCR_ID;\r\n        this.Lat = Lat;\r\n        this.Lon = Lon;\r\n    }\r\n}","export class PVInfo{\r\n    PV_ID: Number; //Unique ID for each PV page\r\n    Lat: Number; //Latitude for google maps\r\n    Lon: Number; //Longitude for google maps\r\n    LAB_ID: Number; //LAB_ID which this PV has been assigned to inspect and validate\r\n    LAB_order: String; //Who assigned the LAB_ID? CCR or PV?\r\n\r\n\r\n    constructor(PV_ID: Number, Lat: Number, Lon: Number, LAB_ID: Number, LAB_order: String){\r\n        this.PV_ID = PV_ID;\r\n        this.Lat = Lat;\r\n        this.Lon = Lon;\r\n        this.LAB_ID = LAB_ID;\r\n        this.LAB_order = LAB_order;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { LabMachineInfo } from '../models/lab-machine-info';\nimport { PVInfo } from '../models/model.pv-info';\nimport { WebService } from './web.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  //For initial pvIDs\n  myPvID: number = 0; //PV-ID of this user\n\n  //For liveUpdatation of myPVID\n  myLat: number = 34.0482809;\n  myLon: number = -118.2437;\n\n  // for info panel\n  infoPresent: Boolean = false;\n\n  selectedLabMachine: LabMachineInfo = null;\n  selectedPv: PVInfo = null;\n\n  labMachineInfo: Boolean = false;\n  pvInfo: Boolean = false;\n\n\n  // for assigning pv to lab\n  pvAssignInProgress: Boolean = false;\n  pvAssignId: Number;\n  labAssignId: Number;\n  //\n\n  constructor(public webService: WebService) { }\n\n\n  getLabInfo(){\n    return this.webService.getLabInfo();\n  }\n\n  getMachineInfo(){\n    return this.webService.getMachineInfo();\n  }\n\n  getPvInfo(){\n    return this.webService.getPvInfo();\n  }\n\n  getEgcrInfo(){\n    return this.webService.getEgcrInfo();\n  }\n\n  updatePvInfo(pv: any){\n    return this.webService.updatePvInfo(pv);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\nimport {take} from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\nimport '@firebase/messaging';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n  messaging:any;\n  currentMessage = new BehaviorSubject(null);\n\n  constructor(private db: AngularFireDatabase, private afAuth: AngularFireAuth) {\n    /*\n    this.messaging = firebase.messaging();\n    this.messaging.usePublicVapidKey(\"BKvOdeV5eFUIyT-GIciYteOXpHlM_G4NfIB5lyn5nMjByDClYYkem1Q7PI5hsBdK91MEkVhqAuqw6QQRaTDKHno\");\n    */\n    \n   }\n\n  private updateToken(token){\n    /*\n    this.afAuth.authState.subscribe(user => {\n      if(!user) return;\n\n      const data = { [user.uid]: token};\n      this.db.object('fcmTokens/').update(data);\n    });*/\n  }\n\n  getPermission(){\n    /*\n    this.messaging.requestPermission().then(()=>{\n      console.log('Notification permission granted.');\n      return this.messaging.getToken();\n    })\n    .then(token => {\n      console.log(token);\n      this.updateToken(token);\n    })\n    .catch((err)=>{\n      console.log(\"Unable to get permission to notify.\", err);\n    });\n    */\n  }\n\n  receiveMessage(){\n    /*\n    console.log(\"registering receive message\");\n\n    this.messaging.onMessage((payload)=>{\n      console.log(\"Message received. \", payload);\n      this.currentMessage.next(payload);\n    });\n    */\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WebService {\n\n  //base_url: string = \"http://192.168.0.108:3000/\"\n\n  //base_url: string = \"http://192.168.100.13:3000/\"\n  //base_url: string = \"http://localhost:3000/\"\n\n  //base_url: string = \"http://192.168.1.110:3000/\"\n\n  //base_url: string = \"https://192.168.100.34:18443/\";\n\n  base_url: string = \"https://192.168.100.34:18443/\";\n\n\n  constructor(public http: HttpClient) { }\n\n  getLabInfo(): Observable<any>{\n    let headers = new HttpHeaders();\n    return this.http.get(this.base_url+'api/lab/', {\n      headers: headers\n    });\n  }\n\n  getMachineInfo(): Observable<any>{\n    let headers = new HttpHeaders();\n    return this.http.get(this.base_url+'api/machine-info/', {\n      headers: headers\n    });\n  }\n\n  getPvInfo(): Observable<any>{\n    let headers = new HttpHeaders();\n    return this.http.get(this.base_url+'api/pv-info/', {\n      headers: headers\n    });\n  }\n\n\n  getEgcrInfo(): Observable<any>{\n    let headers = new HttpHeaders();\n    return this.http.get(this.base_url+'api/egcr-info/', {\n      headers: headers\n    });\n  }\n\n\n  sendNotification(title: string, body_: string): Observable<any>{\n    //console.log(\"notification send called\");\n    //console.log(body_);\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    let body = JSON.stringify({\"title\": title, \"body\": body_});\n    return this.http.post(this.base_url+'api/send-notification' , body, {\n      headers: headers\n    });\n  }\n\n  updatePvInfo(pv: any): Observable<any>{\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'application/json');\n    let body = JSON.stringify(pv);\n    return this.http.post(this.base_url+'api/pv-info/update' , body, {\n      headers: headers\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}